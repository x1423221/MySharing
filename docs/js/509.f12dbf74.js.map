{"version":3,"file":"js/509.f12dbf74.js","mappings":"8MAaA,MAAMA,GAASC,EAAAA,EAAAA,MAETC,EAAeA,KACnBF,EAAOG,KAAK,IAAI,E,4MCblB,MAAMC,EAAc,EAEpB,O,mbCgCA,MAAMC,GAAiBC,EAAAA,EAAAA,IAAI,IACrBN,GAASC,EAAAA,EAAAA,MAGTM,GAAYC,EAAAA,EAAAA,IAAO,aACnBC,GAAUD,EAAAA,EAAAA,IAAO,WACjBE,GAAeF,EAAAA,EAAAA,IAAO,gBACtBG,GAAYC,EAAAA,EAAAA,IAAS,CAAC,GACtBC,GAAYD,EAAAA,EAAAA,IAAS,CAAC,GAEtBE,EAAaC,IACjBL,EAAaM,MAAQX,EAAeW,MAAMD,GAC1Cf,EAAOG,KAAK,SAAS,E,OAIvBc,EAAAA,EAAAA,KAAUC,UACR,IAEE,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAWH,EAAU,cAC7BI,QAAgBC,EAAAA,EAAAA,IAAQH,GAG9BE,EAAQE,SAASC,IACf,MAAMC,EAAOD,EAAIC,OAGjB,GAAID,EAAIE,KAAOnB,EAAQO,MAAMa,OAAQ,CACnC,MAAMC,EAAUC,OAAOC,QAAQL,GAAMM,KAAI,EAAEC,EAAKlB,MAAW,CACzDmB,IAAKT,EAAIE,GACTA,GAAIM,KACDlB,MAIL,YADAX,EAAeW,MAAQ,IAAIX,EAAeW,SAAUc,GAEtD,CAGA,MAAMM,EAAiBL,OAAOC,QAAQL,GACnCU,QAAO,EAAEH,EAAKlB,MACbsB,QAAQC,IAAI,OAAQL,GAGbH,OAAOC,QAAQhB,GAAOwB,MAAK,EAAEC,EAAGC,KAE7B,YAAND,GACAC,EAAEL,QAAOM,GACAA,EAAKd,SAAWpB,EAAQO,MAAMa,SACpCe,OAAS,OAIjBX,KAAI,EAAEC,EAAKlB,MAAW,CACrBmB,IAAKT,EAAIE,GACTA,GAAIM,KACDlB,MAGPX,EAAeW,MAAQ,IAAIX,EAAeW,SAAUoB,GACpD/B,EAAeW,MAAM6B,MAAK,CAACC,EAAEC,IAAMD,EAAEE,KAAOD,EAAEC,MAAK,KAGrDC,EAAAA,EAAAA,IAAa5C,EAAeW,MAAOL,EAAWE,GAE9CN,EAAUS,OAAQ,CACpB,CAAE,MAAOkC,GACPC,MAAMD,EACR,K,unBCvGF,MAAM9C,EAAc,EAEpB,O","sources":["webpack://split/./src/components/BtnGotoHomePage.vue","webpack://split/./src/components/BtnGotoHomePage.vue?431e","webpack://split/./src/components/HistoryComponents.vue","webpack://split/./src/components/HistoryComponents.vue?a576"],"sourcesContent":["<template>\r\n  <button\r\n    id=\"btnGoHome\"\r\n    class=\"btn btn-danger d-flex align-items-center justify-content-center\"\r\n    @click=\"gotoHomePage\"\r\n  >\r\n    <i class=\"bi bi-x-lg\"></i>\r\n  </button>\r\n</template>\r\n\r\n<script setup>\r\nimport { useRouter } from \"vue-router\";\r\n\r\nconst router = useRouter();\r\n\r\nconst gotoHomePage = () => {\r\n  router.push(\"/\");\r\n};\r\n</script>\r\n","import script from \"./BtnGotoHomePage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BtnGotoHomePage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"group-container\">\r\n    <div class=\"container-title\">\r\n      <div class=\"title-container\">\r\n        <BtnGotoHomePage></BtnGotoHomePage>\r\n        <div>\r\n          <span>歷史紀錄</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"container-body\">\r\n      <div class=\"card-container\">\r\n        <div class=\"card\" v-for=\"(group, index) in historyRecords\" :key=\"group.id\"\r\n          :class=\"{ hidden: cardisNew[group.id] }\" :style=\"cardStyle[group.id]\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">{{ group.name }}</h5>\r\n            <span>{{ group.date }}</span>\r\n            <div>\r\n              <button id=\"btnGotoGroupPage\" class=\"btn btn-success\" @click=\"gotoGroup(index)\" style=\"width: 100%;\">\r\n                前往{{ group.name }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject, onMounted, ref, reactive } from \"vue\";\r\nimport { getFirestore, collection, getDocs } from \"firebase/firestore\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { setCardStyle } from \"@/Models/SplitModels\";\r\nimport BtnGotoHomePage from \"./BtnGotoHomePage.vue\";\r\n\r\n\r\nconst historyRecords = ref([]);\r\nconst router = useRouter();\r\n\r\n//取得父元件的資料\r\nconst isLoading = inject(\"isLoading\");\r\nconst profile = inject(\"profile\");\r\nconst currentGroup = inject(\"currentGroup\");\r\nconst cardStyle = reactive({});\r\nconst cardisNew = reactive({});\r\n\r\nconst gotoGroup = (index) => {\r\n  currentGroup.value = historyRecords.value[index];\r\n  router.push(\"/group\");\r\n};\r\n\r\n//註冊階段\r\nonMounted(async () => {\r\n  try {\r\n    //取得分帳資料集合內的所有文件\r\n    const firebase = getFirestore();\r\n    const dbcol = collection(firebase, \"241229Test\");\r\n    const doclist = await getDocs(dbcol);\r\n\r\n    //過濾出文件Id是自己或者members中有自己的資料\r\n    doclist.forEach((ele) => {\r\n      const data = ele.data();\r\n\r\n      //過濾文件id是自己的\r\n      if (ele.id === profile.value.userId) {\r\n        const tmpdata = Object.entries(data).map(([key, value]) => ({\r\n          did: ele.id,\r\n          id: key,\r\n          ...value,\r\n        }));\r\n\r\n        historyRecords.value = [...historyRecords.value, ...tmpdata];\r\n        return; // 直接跳過後續篩選\r\n      }\r\n\r\n      //過濾members欄位中有自己的\r\n      const filteredGroups = Object.entries(data)\r\n        .filter(([key, value]) => {\r\n          console.log(\"key:\", key);\r\n\r\n          // 篩選 `members` 陣列是否包含 `userId.value`\r\n          return Object.entries(value).some(([k, v]) => {\r\n            return (\r\n              k === \"members\" &&\r\n              v.filter(item => {\r\n                return item.userId === profile.value.userId\r\n              }).length > 0\r\n            );\r\n          });\r\n        })\r\n        .map(([key, value]) => ({\r\n          did: ele.id,\r\n          id: key, // 確保 `id` 是單獨的欄位\r\n          ...value,\r\n        }));\r\n\r\n      historyRecords.value = [...historyRecords.value, ...filteredGroups];\r\n      historyRecords.value.sort((a,b) => a.date > b.date)\r\n    });\r\n\r\n    setCardStyle(historyRecords.value, cardStyle, cardisNew);\r\n\r\n    isLoading.value = false;\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./HistoryComponents.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HistoryComponents.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["router","useRouter","gotoHomePage","push","__exports__","historyRecords","ref","isLoading","inject","profile","currentGroup","cardStyle","reactive","cardisNew","gotoGroup","index","value","onMounted","async","firebase","getFirestore","dbcol","collection","doclist","getDocs","forEach","ele","data","id","userId","tmpdata","Object","entries","map","key","did","filteredGroups","filter","console","log","some","k","v","item","length","sort","a","b","date","setCardStyle","err","alert"],"sourceRoot":""}