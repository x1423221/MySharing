{"version":3,"file":"js/215.845f7c5d.js","mappings":"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","sources":["webpack://split/./src/Models/SplitModels.js","webpack://split/../../index.ts","webpack://split/./src/firebase/config.js","webpack://split/./src/components/GroupComponents.vue","webpack://split/./src/components/GroupComponents.vue?0d86"],"sourcesContent":["// models.js\r\nexport class Member {\r\n    constructor(userid, name) {\r\n        this.userid = userid;\r\n        this.name = name;\r\n    }\r\n\r\n    toMap() {\r\n        return {\r\n            userid: this.userid,\r\n            name: this.name\r\n        };\r\n    }\r\n}\r\n\r\nexport class Transaction {\r\n    constructor(id, userid, payer, amount, description, date, split = []) {\r\n        this.id = id;\r\n        this.userid = userid;\r\n        this.payer = payer;\r\n        this.amount = amount;\r\n        this.description = description;\r\n        this.date = date;\r\n        this.split = split;\r\n    }\r\n\r\n    toMap() {\r\n        return {\r\n            isLock: false,\r\n            id: this.id,\r\n            userid: this.userid,\r\n            payer: this.payer,\r\n            amount: this.amount,\r\n            description: this.description,\r\n            date: this.date,\r\n            split: this.split\r\n        };\r\n    }\r\n}\r\n\r\nexport class Split {\r\n    constructor(userid = \"\", share = 0) {\r\n        this.userid = userid;\r\n        this.share = share;\r\n    }\r\n\r\n    toMap() {\r\n        return {\r\n            userid: this.userid,\r\n            share: this.share,\r\n        };\r\n    }\r\n}\r\n\r\nexport class SplitData {\r\n    constructor(name, members = [], transactions = []) {\r\n        this.name = name;\r\n        this.members = members;\r\n        this.transactions = transactions;\r\n    }\r\n\r\n    toMap() {\r\n        return {\r\n            name: this.name,\r\n            members: this.members,\r\n            transactions: this.transactions\r\n        };\r\n    }\r\n}\r\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","// Import the functions you need from the SDKs you need\r\n\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: import.meta.FIREBASEKEY,\r\n  authDomain: \"vuetest-35344.firebaseapp.com\",\r\n  projectId: \"vuetest-35344\",\r\n  storageBucket: \"vuetest-35344.firebasestorage.app\",\r\n  messagingSenderId: \"2844207119\",\r\n  appId: \"1:2844207119:web:687837aeece2bf9eea5b7a\",\r\n  measurementId: \"G-42LZ3K97KN\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nexport default db","<template>\r\n  <div class=\"group-container\">\r\n    <div class=\"container-title\">\r\n      <div class=\"title-container\">\r\n        <button\r\n          id=\"btnGoHome\"\r\n          class=\"btn btn-danger d-flex align-items-center justify-content-center\"\r\n          @click=\"gotoHome\"\r\n        >\r\n          <i class=\"bi bi-x-lg\"></i>\r\n        </button>\r\n        <div v-if=\"storedGroup && !IsEdit\">\r\n          <span>{{ storedGroup.name }}</span>\r\n          <i class=\"bi bi-pencil\" @click=\"EditGroupName\"></i>\r\n        </div>\r\n        <div v-if=\"storedGroup && IsEdit\">\r\n          <input type=\"text\" style=\"width: 150px\" v-model=\"GroupName\" />\r\n          <i class=\"bi bi-check-circle\" @click=\"SaveGroupName\"></i>\r\n          <i class=\"bi bi-x-circle\" @click=\"EditGroupName\"></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <h3>帳目列表</h3>\r\n      <!-- <div\r\n        v-for=\"(d, index) in storedGroup.transactions\"\r\n        :key=\"index\"\r\n        class=\"detail\"\r\n      >\r\n        <span>{{ d.description }}</span>\r\n      </div> -->\r\n    </div>\r\n    <div class=\"row\">\r\n      <h3>即時統計</h3>\r\n      <div></div>\r\n    </div>\r\n\r\n    <button class=\"btn btn-success\" @click=\"shareMember\">分享</button>\r\n    <button class=\"btn btn-success\" @click=\"NewTransaction\">新增帳目</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject, onMounted, ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport liff from \"@line/liff\";\r\nimport db from \"../firebase/config\";\r\nimport { doc, updateDoc, setDoc, arrayUnion } from \"firebase/firestore\";\r\nimport { Transaction } from \"../Models/SplitModels\";\r\n\r\nconst router = useRouter();\r\nconst storedGroup = ref(null);\r\nconst userId = ref(null);\r\nconst userName = ref(\"\");\r\nconst IsEdit = ref(false);\r\nconst GroupName = ref(\"\");\r\nconst TransactionList = ref([]);\r\nlet isLoading;\r\n\r\nonMounted(() => {\r\n  try {\r\n    isLoading = inject(\"isLoading\");\r\n    const groupDataString = JSON.parse(sessionStorage.getItem(\"currentGroup\"));\r\n    alert(JSON.stringify(groupDataString));\r\n    userId.value = sessionStorage.getItem(\"id\");\r\n    userName.value = sessionStorage.getItem(\"displayName\");\r\n    storedGroup.value = groupDataString;\r\n    GroupName.value = storedGroup.value.name;\r\n    TransactionList.value = storedGroup.value.transactions;\r\n  } catch (err) {\r\n    alert(err);\r\n  } finally {\r\n    isLoading.value = false;\r\n  }\r\n});\r\n\r\nconst gotoHome = () => {\r\n  router.push(\"/\");\r\n};\r\n\r\nconst shareMember = () => {\r\n  try {\r\n    //alert(liff.isApiAvailable(\"shareTargetPicker\"));\r\n    liff\r\n      .shareTargetPicker(\r\n        [\r\n          {\r\n            type: \"text\",\r\n            text: `Hi!這是給你的分帳連結`,\r\n          },\r\n        ],\r\n        {\r\n          isMultiple: true,\r\n        }\r\n      )\r\n      .then(function (res) {\r\n        if (res) {\r\n          // succeeded in sending a message through TargetPicker\r\n          alert(`[${res.status}] Message sent!`);\r\n        } else {\r\n          // sending message canceled\r\n          alert(\"TargetPicker was closed!\");\r\n        }\r\n      })\r\n      .catch(function (err) {\r\n        // something went wrong before sending a message\r\n        alert(\"something wrong happen\" + err);\r\n      });\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n};\r\n\r\nconst EditGroupName = () => {\r\n  IsEdit.value = !IsEdit.value;\r\n};\r\n\r\nconst SaveGroupName = async () => {\r\n  try {\r\n    isLoading.value = true;\r\n    storedGroup.value.name = GroupName.value;\r\n    const docRef = doc(db, \"241229Test\", userId.value);\r\n    await updateDoc(docRef, {\r\n      [`${storedGroup.value.id}.name`]: GroupName.value,\r\n    });\r\n\r\n    IsEdit.value = !IsEdit.value;\r\n    isLoading.value = false;\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n};\r\n\r\nconst NewTransaction = async () => {\r\n  //id, payer, amount, description, date, split = [];\r\n  const RID = crypto.randomUUID();\r\n  const transaction = new Transaction(\r\n    RID,\r\n    userId.value,\r\n    userName.value,\r\n    0,\r\n    userName.value + \"創建\",\r\n    new Date()\r\n  ).toMap();\r\n\r\n  try {\r\n    isLoading.value = true;\r\n    const TransactionListdoc = doc(db, \"transactionList\", storedGroup.value.id);\r\n\r\n    await setDoc(TransactionListdoc, {\r\n      [`${storedGroup.value.id}`]: transaction,\r\n    });\r\n\r\n    //後面要再補充這邊的邏輯\r\n    const docRef = doc(db, \"241229Test\", userId.value);\r\n    await updateDoc(docRef, {\r\n      [`${storedGroup.value.id}.transactions`]: arrayUnion(RID),\r\n    });\r\n\r\n    isLoading.value = false;\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./GroupComponents.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GroupComponents.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["Transaction","constructor","id","userid","payer","amount","description","date","split","this","toMap","isLock","SplitData","name","members","transactions","registerVersion","version","firebaseConfig","apiKey","import","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","db","getFirestore","router","useRouter","storedGroup","ref","userId","userName","IsEdit","GroupName","TransactionList","isLoading","onMounted","inject","groupDataString","JSON","parse","sessionStorage","getItem","alert","stringify","value","err","gotoHome","push","shareMember","liff","shareTargetPicker","type","text","isMultiple","then","res","status","catch","EditGroupName","SaveGroupName","async","docRef","doc","updateDoc","NewTransaction","RID","crypto","randomUUID","transaction","Date","TransactionListdoc","setDoc","arrayUnion","__exports__"],"sourceRoot":""}