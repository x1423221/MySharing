{"version":3,"file":"js/591.6cded027.js","mappings":"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","sources":["webpack://split/./src/Models/SplitModels.js","webpack://split/../../index.ts","webpack://split/./src/firebase/config.js","webpack://split/./src/components/HomeComponents.vue","webpack://split/./src/components/HomeComponents.vue?ad8f"],"sourcesContent":["// models.js\r\nexport class Member {\r\n    constructor(userId, name) {\r\n        this.userId = userId;\r\n        this.name = name;\r\n    }\r\n\r\n    topMap() {\r\n        return {\r\n            userId: this.userId,\r\n            name: this.name\r\n        }\r\n    }\r\n}\r\n\r\nexport class Transaction {\r\n    constructor(userId, payer, amount, description, date, split = []) {\r\n        this.userId = userId;\r\n        this.payer = payer;\r\n        this.amount = amount;\r\n        this.description = description;\r\n        this.date = Transaction.dateFormat(date);\r\n        this.split = split;\r\n    }\r\n\r\n    toMap() {\r\n        return {\r\n            isLock: false,\r\n            userId: this.userId,\r\n            payer: this.payer,\r\n            amount: this.amount,\r\n            description: this.description,\r\n            date: this.date,\r\n            split: this.split\r\n        };\r\n    }\r\n\r\n    static dateFormat(date) {\r\n        const formatter = new Intl.DateTimeFormat(\"zh-TW\", {\r\n            year: \"numeric\",\r\n            month: \"2-digit\",\r\n            day: \"2-digit\",\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n            second: \"2-digit\",\r\n            hour12: false,\r\n        });\r\n        const formattedDate = formatter.format(date).replace(/\\//g, \"-\").replace(\",\", \"\");\r\n        return formattedDate;\r\n    }\r\n}\r\n\r\nexport class Split {\r\n    constructor(userId = \"\", userName = \"\", share = 0) {\r\n        this.userId = userId;\r\n        this.userName = userName;\r\n        this.share = share;\r\n    }\r\n\r\n    toMap() {\r\n        return {\r\n            userName: this.userName,\r\n            userId: this.userId,\r\n            share: this.share,\r\n        };\r\n    }\r\n}\r\n\r\nexport class SplitData {\r\n    constructor(name, members = []) {\r\n        this.name = name;\r\n        this.members = members;\r\n    }\r\n\r\n    toMap() {\r\n        return {\r\n            name: this.name,\r\n            members: this.members,\r\n        };\r\n    }\r\n}\r\n\r\nexport class TransactionDetail {\r\n    constructor(userId = \"\", userName = \"\", splitAmount = 0) {\r\n        this.userId = userId;\r\n        this.userName = userName;\r\n        this.splitAmount = splitAmount;\r\n    }\r\n}","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n","// Import the functions you need from the SDKs you need\r\n\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: import.meta.FIREBASEKEY,\r\n  authDomain: \"vuetest-35344.firebaseapp.com\",\r\n  projectId: \"vuetest-35344\",\r\n  storageBucket: \"vuetest-35344.firebasestorage.app\",\r\n  messagingSenderId: \"2844207119\",\r\n  appId: \"1:2844207119:web:687837aeece2bf9eea5b7a\",\r\n  measurementId: \"G-42LZ3K97KN\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nexport default db","<template>\r\n  <div class=\"home-container\">\r\n    <h1>分帳輕鬆搞定</h1>\r\n    <p>快速紀錄與分帳，讓金錢計算更簡單。</p>\r\n    <div>\r\n      <button id=\"btnCreateNew\" class=\"btn btn-success\" @click=\"gotoGroupPage\">\r\n        建立新分帳\r\n      </button>\r\n      <button id=\"btnShowHis\" class=\"btn btn-success\" @click=\"gotoHistoryPage\">\r\n        檢視歷史紀錄\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, inject } from \"vue\";\r\nimport { useRouter, useRoute } from \"vue-router\";\r\nimport { doc, setDoc, getDoc, updateDoc } from \"firebase/firestore\";\r\nimport { SplitData, Member } from \"../Models/SplitModels\";\r\nimport db from \"../firebase/config\";\r\nimport liff from \"@line/liff\";\r\n\r\nconst profile = ref(null);\r\nconst splitallData = ref(null);\r\nconst isLoading = inject(\"isLoading\");\r\nconst route = useRoute();\r\nconst group = ref(null);\r\nconst uid = ref(null);\r\n\r\nonMounted(async () => {\r\n  isLoading.value = true;\r\n  await liff\r\n    .getProfile()\r\n    .then((value) => {\r\n      console.log(value.displayName);\r\n      profile.value = value;\r\n    })\r\n    .finally(() => {\r\n      sessionStorage.setItem(\"id\", profile.value.userId);\r\n      sessionStorage.setItem(\"displayName\", profile.value.displayName);\r\n    });\r\n\r\n  group.value = route.query?.g;\r\n  uid.value = route.query?.u;\r\n  if (group.value && uid) {\r\n    await HasPGotoGroupPage(true);\r\n  }\r\n  isLoading.value = false;\r\n});\r\n\r\nconst router = useRouter();\r\n\r\nconst HasPGotoGroupPage = async () => {\r\n  const docRef = doc(db, \"241229Test\", uid.value);\r\n  const docSnap = await getDoc(docRef);\r\n\r\n  if (docSnap.exists()) {\r\n    const fieldValue = docSnap.data()[group.value];\r\n    fieldValue.id = group.value;\r\n\r\n    alert(JSON.stringify(fieldValue));\r\n\r\n    sessionStorage.setItem(\"currentGroup\", JSON.stringify(fieldValue));\r\n    router.push(\"/group\");\r\n  } else {\r\n    alert(\"載入失敗\");\r\n  }\r\n};\r\n\r\nconst gotoGroupPage = async () => {\r\n  isLoading.value = true;\r\n  try {\r\n    const docRef = doc(db, \"241229Test\", profile.value.userId);\r\n    const docSnap = await getDoc(docRef);\r\n    const RID = crypto.randomUUID();\r\n    const member = [];\r\n    member.push(\r\n      new Member(profile.value.userId, profile.value.displayName).topMap()\r\n    );\r\n    splitallData.value = new SplitData(\r\n      `${profile.value.displayName}的群組`,\r\n      member\r\n    );\r\n    //已經存在這個文件\r\n    if (docSnap.exists()) {\r\n      await updateDoc(docRef, {\r\n        [`${RID}`]: splitallData.value.toMap(),\r\n      });\r\n    }\r\n    //否則新增文件並新增群組\r\n    else {\r\n      await setDoc(docRef, {\r\n        [`${RID}`]: splitallData.value.toMap(),\r\n      })\r\n        .then(() => console.log(\"Data saved successfully\"))\r\n        .catch((err) => console.error(\"Error saving data:\", err));\r\n    }\r\n    splitallData.value = { ...splitallData.value, id: RID };\r\n    sessionStorage.setItem(\"currentGroup\", JSON.stringify(splitallData.value));\r\n    router.push({ path: \"/group\" });\r\n  } catch (err) {\r\n    alert(err + \"新增資料失敗\");\r\n    isLoading.value = false;\r\n  }\r\n};\r\n\r\nconst gotoHistoryPage = async () => {\r\n  isLoading.value = true;\r\n\r\n  router.push({ path: \"/history\" });\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh1,\r\nspan,\r\na,\r\np {\r\n  color: white;\r\n  margin: 0 0 10px 0;\r\n}\r\n\r\nbutton {\r\n  margin: 10px;\r\n}\r\n\r\n.home-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n#btnShowHis {\r\n  background: white;\r\n  border: white;\r\n  color: #2894ff;\r\n}\r\n\r\n#btnCreateNew {\r\n  background: #f75000;\r\n  border: white;\r\n  color: white;\r\n}\r\n\r\n@media screen and (max-width: 700px) {\r\n  .body {\r\n    display: block;\r\n    height: 100vh;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./HomeComponents.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HomeComponents.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./HomeComponents.vue?vue&type=style&index=0&id=fb1e6db2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-fb1e6db2\"]])\n\nexport default __exports__"],"names":["Member","constructor","userId","name","this","topMap","Transaction","payer","amount","description","date","split","dateFormat","toMap","isLock","formatter","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","formattedDate","format","replace","SplitData","members","TransactionDetail","userName","splitAmount","registerVersion","version","firebaseConfig","apiKey","import","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","db","getFirestore","profile","ref","splitallData","isLoading","inject","route","useRoute","group","uid","onMounted","async","value","liff","getProfile","then","console","log","displayName","finally","sessionStorage","setItem","query","g","u","HasPGotoGroupPage","router","useRouter","docRef","doc","docSnap","getDoc","exists","fieldValue","data","id","alert","JSON","stringify","push","gotoGroupPage","RID","crypto","randomUUID","member","updateDoc","setDoc","catch","err","error","path","gotoHistoryPage","__exports__"],"sourceRoot":""}